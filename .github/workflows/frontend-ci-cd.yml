name: Frontend CI/CD

on:
  push:
    branches: ['master']
    paths:
      - 'client/**'
  workflow_dispatch:

jobs:
  lint-and-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'
      - name: Get npm cache directory
        id: npm-cache
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ./client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  build:
    needs: lint-and-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./client
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/react-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/react-frontend:${{ github.sha }}

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull image from Docker Hub
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/react-frontend:latest

      - name: Stop and remove existing container
        run: |
          docker stop react-frontend || true
          docker rm react-frontend || true
        continue-on-error: true
      - name: Run docker container
        run: docker run -d -p 80:80 --name react-frontend ${{ secrets.DOCKERHUB_USERNAME }}/react-frontend:latest
